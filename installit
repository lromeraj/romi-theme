#!/bin/bash

source .src

# trap Ctrl + C
trap ctrl_c 2

ctrl_c() {
  echo
  warn "install cancelled\n"
  exit
}

blur()
{
  info "blurring $1, this may take a while...\n"
  convert $1 -blur 0x50 $1
}

# check root privilegies
if [ "$EUID" -eq 0 ]; then
  warn "please, run this as normal user\\n"
  exit
fi

printf "${BPurple}installer${NC}@${BCyan}v1.1.3${NC} by ${Yellow}@lromeraj${NC}\n"

printf "Install ${BPurple}Romi${NC} theme?"
if [[ `prompt` -eq 0 ]]; then
  warn "install was cancelled\\n"
  exit
fi

# check if sudo command can be used without password
if [ sudo -n true 2>/dev/null ]; then
    warn "sudo available, skipping password input...\\n"
else
  warn "root access is required for install\n"
  sudo echo "" > /dev/null
fi

info "loading wallpapers...\n"

#initialize array
typeset -A WALLS

# wallpapers
WALLS=(
  [desktop]="desktop.jpg"
  [lock_screen]="gdmlock.jpg"
)

for env in ${!WALLS[@]}
do

  fileN=${WALLS[$env]}

  if [ -e ./wallpapers/$fileN ]
  then
    info "using custom wallpaper $fileN\n"
    printf "Do you want to blur it?"
    if [[ `prompt` -eq 1 ]]
    then
      blur ./wallpapers/$fileN
    fi

  else

    case $env in

      desktop)
        file=/usr/share/backgrounds/desktop.jpg
        if [ ! -e $file ]
        then
          warn "$file was not found, copying default...\n"
          cp ./wallpapers/.desktop_def.jpg ./wallpapers/desktop.jpg
        else
          cp $file ./wallpapers/desktop.jpg
        fi
      ;;

      lock_screen)
        file=/usr/share/backgrounds/gdmlock.jpg
        if [ ! -e $file ]
        then
          warn "$file was not found, copying default...\n"
          cp ./wallpapers/.gdmlock_def.jpg ./wallpapers/gdmlock.jpg
        else
          cp $file ./wallpapers/gdmlock.jpg
        fi
      ;;

    esac

  fi

done

info "copying wallpapers ...\n"
sudo mv ./wallpapers/gdmlock.jpg ./wallpapers/desktop.jpg /usr/share/backgrounds/

info "installing icons ...\n"
sudo cp -fr .icons/* /usr/share/icons/

info "installing apps theme ...\n"
sudo cp -fr .gtk/* /usr/share/themes/

SCHMES_PATHS=()
SCHMES_PATHS+=( "/usr/share/gtksourceview-3.0/styles/" )
SCHMES_PATHS+=( "/usr/share/gtksourceview-4/styles/" )
info "installing schemes ...\n"

for SP in ${SCHMES_PATHS[@]}; do
  if [ -e $SP ]; then
    sudo cp -f .schemes/* $SP
  fi
done


info "installing shell theme ...\n"
sudo cp -f .gdm/gnome-shell.css /etc/alternatives/gdm3.css

info "installing dependency extensions ...\n"
mkdir -p ~/.local/share/gnome-shell/extensions/
cp -r .extensions/* ~/.local/share/gnome-shell/extensions/

info "installing extensions...\n"
for ext_name in `ls .extensions/`
do
  printf "${Green}enabling: ${BPurple}$ext_name${NC} ... "
  gnome-shell-extension-tool -e $ext_name &> /dev/null

  if [ $? -eq 0 ]; then
    printf "${Green}success${NC}\\n"
  else
    printf "${Yellow}already enabled${NC}\\n"
  fi
done

info "resetting terminal preferences ...\\n"
dconf reset -f /org/gnome/terminal/

info "updating dconf database ...\\n"
cat ./.dconf | dconf load /

info "restarting shell ...\\n"
_rshell # restart shell

success "all done\\n"
notify-send "Romi theme" "Theme was installed correctly"

warn "a reboot is higly recommended ... do it now?"
if [[ `prompt` -eq 1 ]]; then
	sudo reboot
fi

